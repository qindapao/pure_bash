. ./meta/meta.sh
((DEFENSE_VARIABLES[atom_identify_data_type]++)) && return 0


# 在函数内部定义一个函数，在外面也是能看到的,所以要定义到外层函数的最上面
# :TODO: 简单的操作不一定要使用函数来定义，也可以使用alis别名(使用这个甚至可以创建自己的类型,由于意思不大,暂时不考虑)
# 但是别名无法接受参数,只是命令的简单替换,可以理解为固定宏,连函数宏的功能都没有

# set -u 选项不要设置，否则遇到使用未定义的变量会被退出([ -n "${DEBUG:-}" ] 所以很多项目中使用类似这种语法来保护)
#                    _______________  _______________
#                  .'               .'               .|
#                .'               .'               .' |
#              .'_______________.'______________ .'   |
#              | ___ _____ ___ || ___ _____ ___ |     |
#              ||_=_|__=__|_=_||||_=_|__=__|_=_||     |
#        ______||_____===_____||||_____===_____||     | __________
#     .'       ||_____===_____||||_____===_____||    .'          .'|
#   .'         ||_____===_____||||_____===_____||  .'          .'  |
# .'___________|_______________||_______________|.'__________.'    |
# |.----------.|.-----___-----.||.-----___-----.||    |_____.----------.
# |]          |||_____________||||_____________|||  .'      [          |
# ||          ||.-----___-----.||.-----___-----.||.'        |          |
# ||          |||_____________||||_____________|||==========|          |
# ||          ||.-----___-----.||.-----___-----.||    |_____|          |
# |]         o|||_____________||||_____________|||  .'      [        'o|
# ||          ||.-----___-----.||.-----___-----.||.'        |          |
# ||          |||             ||||_____________|||==========|          |
# ||          |||             |||.-----___-----.||    |_____|          |
# |]          |||             ||||             |||  .'      [          |
# ||__________|||_____________||||_____________|||.'________|__________|
# ''----------'''------------------------------'''----------''
#             (o)LGB                           (o)
# 

# 判断数据类型(不能判断一个数据是否是引用变量)
# i: 整数
# s: 字符串
# a: 数组
# A: 关联数组
atom_identify_data_type ()
{
    local -n _atom_identify_data_type_var_name="${1}"
    local _atom_identify_data_type_verify_type="${2}"
    local up_var_name=
    local real_var_name=

    local attribute=${_atom_identify_data_type_var_name@a}

    if [[ "$attribute" == *"$_atom_identify_data_type_verify_type"* ]] ; then
        return 0
    elif [[ -z "$attribute" ]] && [[ "s" == "$_atom_identify_data_type_verify_type" ]] ; then
        return 0
    fi
    
    return 1
}

return 0

